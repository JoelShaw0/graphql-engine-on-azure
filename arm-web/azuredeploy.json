{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "defaultValue": null,
      "type": "String",
      "metadata": {
        "description": "Unique name for the deployment, used as the DNS label also."
      }
    },
    "postgresVersion": {
      "type": "String",
      "defaultValue": "10",
      "allowedValues": [
        "12",
        "11",
        "10",
        "9.6",
        "9.5"
      ],
      "metadata": {
        "description": "Version of PostgreSQL Server to be provisioned."
      }
    },
    "adminPassword": {
      "type": "SecureString",
      "defaultValue": null,
      "metadata": {
        "description": "Admin password for Postgres. Must be at least 8 characters in length, must contain characters from three of the following categories â€“ English uppercase letters, English lowercase letters, numbers (0-9), and non-alphanumeric characters (!, $, #, %, etc.)."
      }
    },
    "urlEncodedAdminPassword": {
      "type": "SecureString",
      "defaultValue": null,
      "metadata": {
        "description": "If you have special characters in the password (!, $, #, %, etc.), URL encode and paste it here. Otherwise, just re-type the password."
      }
    }
  },
  "variables": {
    "serverName": "[concat(parameters('name'), '-pg-server')]",
    "websiteName": "[concat(parameters('name'), '-website')]",
    "serverFarmName": "[concat(parameters('name'), '-server-farm')]",
    "adminUser": "hasura",
    "dbName": "hasura",
    "firewallRuleName": "allow-all-azure-firewall-rule",
    "containerImage": "hasura/graphql-engine:v2.15.1"
  },
  "resources": [
    {
      "name": "[variables('serverName')]",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.DBforPostgreSQL/servers",
      "apiVersion": "2017-12-01",
      "properties": {
        "version": "[parameters('postgresVersion')]",
        "administratorLogin": "hasura",
        "administratorLoginPassword": "[parameters('adminPassword')]"
      },
      "resources": [
        {
          "name": "[variables('dbName')]",
          "type": "databases",
          "apiVersion": "2017-12-01",
          "properties": {
            "charset": "UTF8",
            "collation": "English_United States.1252"
          },
          "dependsOn": [
            "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('serverName'))]"
          ]
        },
        {
          "type": "firewallRules",
          "name": "[variables('firewallRuleName')]",
          "apiVersion": "2017-12-01",
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          },
          "dependsOn": [
            "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('serverName'))]"
          ]

        }
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "Tier": "Basic",
        "Name": "B1"
      },
      "kind": "linux",
      "name": "[variables('serverFarmName')]",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "workerSizeId": "0",
        "reserved": true,
        "numberOfWorkers": "1"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "name": "[variables('websiteName')]",
      "apiVersion": "2018-02-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "siteConfig": {
          "appSettings": [
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "HASURA_GRAPHQL_DATABASE_URL",
              "value": "[concat('postgres://', variables('adminUser'), '%40', variables('serverName'), ':', parameters('urlEncodedAdminPassword'), '@', reference(resourceId('Microsoft.DBforPostgreSQL/servers', variables('serverName'))).fullyQualifiedDomainName, ':5432/', variables('dbName'))]"
            },
            {
              "name": "HASURA_GRAPHQL_ENABLE_CONSOLE",
              "value": "true"
            },
            {
              "name": "WEBSITES_PORT",
              "value": "8080"
            }
          ],
          "linuxFxVersion": "[concat('DOCKER|', variables('containerImage'))]"
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverFarmName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('serverName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('serverFarmName'))]"
      ]
    }
  ],
  "outputs": {
    "fqdn": {
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('websiteName'))).defaultHostName]",
      "type": "string"
    }
  }
}
