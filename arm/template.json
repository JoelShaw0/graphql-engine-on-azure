{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "server_name": {
      "defaultValue": null,
      "type": "String"
    },
    "location": {
      "type": "String",
      "defaultValue": "[resourceGroup().location]"
    },
    "postgres_version": {
      "type": "String",
      "defaultValue": "10",
      "allowedValues": [
        "10",
        "9.6",
        "9.5"
      ]
    },
    "admin_user": {
      "type": "String",
      "defaultValue": "hasura"
    },
    "admin_password": {
      "type": "SecureString",
      "defaultValue": ""
    },
    "encoded_admin_password": {
      "type": "SecureString",
      "defaultValue": ""
    },
    "database_name": {
      "type": "String",
      "defaultValue": "hasura"
    },
    "container_name": {
      "type": "String",
      "defaultValue": "hasura-graphql-engine"
    },
    "dns_name": {
      "type": "String",
      "defaultValue": ""
    },
    "image_name": {
      "type": "String",
      "defaultValue": "hasura/graphql-engine:v1.0.0-alpha27"
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('server_name')]",
      "location": "[parameters('location')]",
      "type": "Microsoft.DBforPostgreSQL/servers",
      "apiVersion": "2017-12-01",
      "properties": {
        "version": "[parameters('postgres_version')]",
        "administratorLogin": "[parameters('admin_user')]",
        "administratorLoginPassword": "[parameters('admin_password')]"
      },
      "resources": [
        {
          "name": "[concat(parameters('server_name'), '/', parameters('database_name'))]",
          "type": "Microsoft.DBforPostgreSQL/servers/databases",
          "apiVersion": "2017-12-01",
          "properties": {
            "charset": "UTF8",
            "collation": "English_United States.1252"
          },
          "dependsOn": [
            "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('server_name'))]"
          ]
        },
        {
          "type": "Microsoft.DBforPostgreSQL/servers/firewallRules",
          "name": "[concat(parameters('server_name'), '/', 'AllowAllWindowsAzureIps')]",
          "apiVersion": "2017-12-01",
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          },
          "dependsOn": [
            "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('server_name'))]"
          ]

        }
      ]
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "name": "[parameters('container_name')]",
      "apiVersion": "2018-06-01",
      "location": "[parameters('location')]",
      "tags": {},
      "scale": null,
      "properties": {
        "containers": [
          {
            "name": "[parameters('container_name')]",
            "properties": {
              "image": "[parameters('image_name')]",
              "ports": [
                {
                  "protocol": "TCP",
                  "port": 8080
                }
              ],
              "environmentVariables": [
                {
                  "name": "HASURA_GRAPHQL_DATABASE_URL",
                  "value": "[concat('postgres://', parameters('admin_user'), '%40', parameters('server_name'), ':', parameters('encoded_admin_password'), '@', parameters('server_name'), '.postgres.database.azure.com:5432/', parameters('database_name'))]"
                }
              ],
              "resources": {
                "requests": {
                  "memoryInGB": 1,
                  "cpu": 1
                }
              }
            }
          }
        ],
        "restartPolicy": "Always",
        "ipAddress": {
          "ports": [
            {
              "protocol": "TCP",
              "port": 8080
            }
          ],
          "type": "Public",
          "dnsNameLabel": "[parameters('dns_name')]"
        },
        "osType": "Linux"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('server_name'))]"
      ]
    }
  ],
  "outputs": {
    "fqdn": {
      "value": "[concat(reference(parameters('container_name')).ipAddress.dnsNameLabel, '.', parameters('location'), '.azurecontainer.io:8080')]",
      "type": "string"
    },
    "ipaddress": {
      "value": "[reference(parameters('container_name')).ipAddress.ip]",
      "type": "string"
    }
  }
}
